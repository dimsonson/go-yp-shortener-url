syntax = "proto3";

package proto;

option go_package = "internal/app/api/grpc/proto";

// Put

message PutRequest {
    string value = 1;
    string userid = 2;
  }

message PutResponse {    
    string key = 1;
    string existKey = 2;
    string error = 3; // ошибка
  }


message BatchRequest {
    string CorrelationID = 1;
	string OriginalURL = 2;
	string ShortURL = 3;
}

message PutBatchRequest {
    BatchRequest dc = 1;
    string userid = 2;
  }


message PutBatchResponse {
    BatchRequest dcCorr = 1;
    string error = 2; // ошибка
  }

service Put {
    rpc Put(PutRequest) returns (PutResponse);
    rpc PutBatch(PutBatchRequest) returns (PutBatchResponse);
  }
  
// Get

message GetRequest {
    string key = 1;
  }

message GetResponse {    
    string value = 1;
    bool del = 2;
    string error = 3; // ошибка
  }


message GetBatchRequest {
  string userid = 1;
	}

  
message GetBatchResponse {
  repeated userURL userURLsMap = 1;
  string error = 2; // ошибка
  }

message UserURL {
  string user = 1;
  string URL = 2; 
  }

service Get {
    rpc Get(GetRequest) returns (GetResponse);
    rpc GetBatch(GetBatchRequest) returns (GetBatchResponse);
  }

// Delete

message DeleteRequest {
    string key = 1;
    string userid = 2;
  }

message DeleteResponse {    
    string error = 1; // ошибка
  }

service Delete {
  rpc Delete(DeleteRequest) returns (DeleteResponse);
  }

// Info

message PingRequest {
}

message PingResponse {    
  bool ok = 1;
  string error = 2; // ошибка
}

message StatRequest {
}

message StatResponse {    
  Stat stat = 1;
  string error = 2; // ошибка
}

message Stat {    
  int64 Urls = 1;
  int64 Users = 2; 
}

service Get {
  rpc Ping(PingRequest) returns (PintResponse);
  rpc Stat(StatRequest) returns (StatResponse);
}




/*
protoc --go_out=. --go_opt=paths=source_relative \
  --go-grpc_out=. --go-grpc_opt=paths=source_relative \
  services.proto
*/